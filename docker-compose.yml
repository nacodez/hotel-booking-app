# Docker Compose for Full-Stack Development and Production

version: '3.8'

services:
  # Frontend Service
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: production
    container_name: hotel-booking-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_APP_ENVIRONMENT=production
      - VITE_API_BASE_URL=http://backend:5000/api
    depends_on:
      - backend
    networks:
      - hotel-booking-network
    restart: unless-stopped

  # Backend Service  
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: hotel-booking-backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - CLIENT_URL=http://frontend:3000
    env_file:
      - ./server/.env.production
    networks:
      - hotel-booking-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: hotel-booking-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - hotel-booking-network
    restart: unless-stopped

  # Redis for Caching (Optional)
  redis:
    image: redis:7-alpine
    container_name: hotel-booking-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hotel-booking-network
    restart: unless-stopped
    command: redis-server --appendonly yes

networks:
  hotel-booking-network:
    driver: bridge

volumes:
  redis_data:
    driver: local